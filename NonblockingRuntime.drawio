<mxGraphModel dx="1624" dy="2304" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="1654" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="2" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
      <mxGeometry x="420" y="90" width="320" height="350" as="geometry" />
    </mxCell>
    <mxCell id="3" value="&lt;h1&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;while (true)&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;batch = events.poll()&lt;/font&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;div style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;&amp;nbsp; for (item in batch) {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;&amp;nbsp; &amp;nbsp; switch (item.type) {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; thread_pool.submit(item);&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;&lt;font style=&quot;font-size: 20px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
      <mxGeometry x="440" y="160" width="310" height="270" as="geometry" />
    </mxCell>
    <mxCell id="4" value="&lt;h1&gt;Control kernel threads × core count&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=20;" parent="1" vertex="1">
      <mxGeometry x="415" y="-30" width="375" height="120" as="geometry" />
    </mxCell>
    <mxCell id="5" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
      <mxGeometry x="790" y="90" width="320" height="350" as="geometry" />
    </mxCell>
    <mxCell id="6" value="&lt;h1&gt;work stealing thread pool&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
      <mxGeometry x="795" y="240" width="310" height="270" as="geometry" />
    </mxCell>
    <mxCell id="7" value="&lt;h1&gt;CPU/IO threads&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=20;" parent="1" vertex="1">
      <mxGeometry x="790" y="-10" width="310" height="120" as="geometry" />
    </mxCell>
    <mxCell id="8" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
      <mxGeometry x="-100" y="90" width="510" height="350" as="geometry" />
    </mxCell>
    <mxCell id="9" value="&lt;h1&gt;App threads × as many as needed&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=20;" parent="1" vertex="1">
      <mxGeometry x="-15" y="-40" width="375" height="120" as="geometry" />
    </mxCell>
    <mxCell id="10" value="&lt;h1&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;start_worker_threadpool();&lt;br&gt;start_control_threads();&lt;br&gt;while (true) {&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-weight: 400; font-size: 20px;&quot;&gt;for (lightweight_thread in threads) {&lt;/span&gt;&lt;/h1&gt;&lt;div&gt;&lt;span style=&quot;font-weight: 400; font-size: 20px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;lightweight_thread.preempt();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-weight: 400; font-size: 20px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-weight: 400; font-size: 20px;&quot;&gt;&amp;nbsp; &amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-weight: 400; font-size: 20px;&quot;&gt;&amp;nbsp;next_thread = (threads_length + 1) % threads.count&amp;nbsp; &amp;nbsp;threads[next_thread].user_function();&lt;/span&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
      <mxGeometry x="-80" y="120" width="500" height="270" as="geometry" />
    </mxCell>
    <mxCell id="11" value="&lt;h1&gt;A very scalable multithreaded architecture&amp;nbsp;&lt;/h1&gt;&lt;p&gt;The thread topology in three parts. Combines preemptible green threads with thread pool technology and lib uring for high performance concurrency and parallelism.&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=20;" parent="1" vertex="1">
      <mxGeometry x="-15" y="-260" width="985" height="200" as="geometry" />
    </mxCell>
    <mxCell id="12" value="&lt;h1&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Non-blocking Ringbuffers&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span style=&quot;background-color: initial; font-size: 20px; font-weight: normal;&quot;&gt;Lightweight thread functions are background server logic not associated with a given request, they check ringbuffers non-blockingly to communicate responses from IO&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=20;" parent="1" vertex="1">
      <mxGeometry x="-100" y="450" width="390" height="540" as="geometry" />
    </mxCell>
    <mxCell id="13" value="&lt;h1&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Control flow for a request&amp;nbsp;&lt;/span&gt;decided here&lt;/h1&gt;&lt;h1&gt;&lt;span style=&quot;background-color: initial; font-size: 20px; font-weight: normal;&quot;&gt;Lightweight thread functions check ringbuffers non-blockingly to communicate responses from IO&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=20;" parent="1" vertex="1">
      <mxGeometry x="420" y="440" width="340" height="540" as="geometry" />
    </mxCell>
    <mxCell id="14" value="&lt;h1&gt;Computation happens here&lt;/h1&gt;&lt;h1&gt;&lt;span style=&quot;background-color: initial; font-size: 20px; font-weight: normal;&quot;&gt;All computation happens here.&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=20;" parent="1" vertex="1">
      <mxGeometry x="790" y="440" width="390" height="540" as="geometry" />
    </mxCell>
  </root>
</mxGraphModel>
